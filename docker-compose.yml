version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: heatlink-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: heatlink
      TZ: Asia/Shanghai
      PGTZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - heatlink-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: heatlink-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - TZ=Asia/Shanghai
    networks:
      - heatlink-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: heatlink-app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - heatlink-network
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/heatlink
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - TZ=Asia/Shanghai
      - PGTZ=Asia/Shanghai
    command: >
      bash -c "
        alembic upgrade head &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --log-level warning
      "

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: heatlink-worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - heatlink-network
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/heatlink
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - CELERY_CONCURRENCY=2
      - TZ=Asia/Shanghai
      - PGTZ=Asia/Shanghai

  beat:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: heatlink-beat
    depends_on:
      - worker
    networks:
      - heatlink-network
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/heatlink
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - CELERY_BEAT=true
      - TZ=Asia/Shanghai
      - PGTZ=Asia/Shanghai
    command: python beat_start.py

networks:
  heatlink-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 