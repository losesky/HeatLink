version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: heatlink-postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: heatlink_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - heatlink-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: heatlink-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - heatlink-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: heatlink-app-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    networks:
      - heatlink-network-dev
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/heatlink_dev
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DEBUG=true
    command: >
      bash -c "
        alembic upgrade head &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: heatlink-worker-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    networks:
      - heatlink-network-dev
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/heatlink_dev
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - CELERY_CONCURRENCY=1
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- python worker_start.py

  beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: heatlink-beat-dev
    depends_on:
      - worker
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    networks:
      - heatlink-network-dev
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/heatlink_dev
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - CELERY_BEAT=true
    command: python beat_start.py

  pgadmin:
    image: dpage/pgadmin4
    container_name: heatlink-pgadmin-dev
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@heatlink.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    networks:
      - heatlink-network-dev
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: heatlink-redis-commander-dev
    depends_on:
      - redis
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - heatlink-network-dev
    restart: unless-stopped

networks:
  heatlink-network-dev:
    driver: bridge

volumes:
  postgres_data_dev:
  redis_data_dev:
  pgadmin_data_dev: 